name: CI/CD - EC2 App Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy App to EC2
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: ðŸ§ª SSH Key Setup
        shell: powershell
        run: |
          $sshPath = "$env:USERPROFILE\.ssh"
          $keyPath = "$sshPath\id_rsa"

          if (-not (Test-Path -Path $sshPath)) {
              Write-Output "Creating .ssh directory"
              New-Item -ItemType Directory -Path $sshPath | Out-Null
          }

          if (-not (Test-Path -Path $keyPath)) {
              Write-Output "Writing new SSH key"
              Set-Content -Path $keyPath -Value "${{ secrets.EC2_SSH_KEY }}"-Encoding ascii -Force

              Write-Output " Setting permissions"
              icacls $keyPath /inheritance:r /grant:r "$($env:USERNAME):R"
          } 
          else {
              Write-Output " SSH key already exists. Skipping."
          }

      - name: ðŸ§ª Terraform Import Existing Resources
        shell: powershell
        run: |
          ./ec2-automation/terraform/terraform-import.ps1


                

      - name: Terraform Init
        shell: powershell
        run: |
          Set-Location ec2-automation/terraform
          terraform init

      - name: Terraform Plan
        shell: powershell
        run: |
          Set-Location ec2-automation/terraform
          terraform plan -var-file="dev.tfvars"

      - name: Terraform Apply
        shell: powershell
        run: |
          Set-Location ec2-automation/terraform
          terraform apply -auto-approve -var-file="dev.tfvars"

      - name: Get EC2 Instance IP
        working-directory: ec2-automation/terraform
        shell: powershell
        run: |
          Write-Output "==> Running: terraform output -raw instance_public_ip"
          $IP = terraform output -raw instance_public_ip
          Write-Output "âœ… Extracted EC2 IP: $IP"
          echo "ip=$IP" >> $env:GITHUB_OUTPUT
        id: get_ip

      - name: Deploy App to EC2
        shell: powershell
        run: |
          Write-Output "Connecting to EC2 and deploying..."
          ssh -o StrictHostKeyChecking=no -i $HOME/.ssh/id_rsa ubuntu@${{ steps.get_ip.outputs.ip }} 'echo Hello from EC2 && uptime'

