name: CI/CD - EC2 App Deployment

on:
  push:
    branches:
      - main
    tags:
      - deploy-*
  workflow_dispatch:
    inputs:
      stage:
        description: 'Stage to deploy (dev/prod)'
        required: true
        default: 'dev'

jobs:
  deploy:
    name: Deploy App
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout repository
        uses: actions/checkout@v3

      - name: 🗂️ Show repo structure
        run: ls -R

      - name: 🔐 Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      - name: 🔷 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: 🧰 Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: 🔷 Terraform Init
        run: cd ec2-automation/terraform && terraform init

      - name: 🔷 Terraform Apply
        run: |
          cd ec2-automation/terraform
          terraform apply -auto-approve -var-file="${{ github.event.inputs.stage || 'dev' }}.tfvars"

      - name: 🌐 Get EC2 Public IP
        id: get_ip
        run: |
          cd ec2-automation/terraform
          # capture only the IP itself
          IP=$(terraform output -raw instance_public_ip | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}')
          echo "EC2_IP=$IP" >> $GITHUB_ENV

      - name: ⏳ Wait for SSH to be ready
        run: |
          for i in {1..10}; do
            echo "⏳ Attempt $i: testing SSH on $EC2_IP..."
            if ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 -i ~/.ssh/id_rsa ubuntu@$EC2_IP 'echo ok' >/dev/null 2>&1; then
              echo "✅ SSH is ready"
              exit 0
            fi
            sleep 10
          done
          echo "❌ SSH not ready after 10 tries"
          exit 1


      - name: 🚀 Deploy application
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$EC2_IP "cd ~/ec2-automation && bash main.sh ${{ github.event.inputs.stage || 'dev' }}"

      - name: 🔍 Validate health
        run: |
          for i in {1..10}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://$EC2_IP:80)
            if [ "$STATUS" == "200" ]; then
              echo "✅ App is healthy"
              exit 0
            else
              echo "⏳ App not ready yet ($STATUS), retrying..."
              sleep 10
            fi
          done
          echo "❌ App failed health check"
          exit 1
